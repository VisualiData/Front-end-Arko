@charset 'utf-8';
@import 'settings';
@import 'foundation';
@include foundation-global-styles;
@include foundation-grid;
@include foundation-flex-grid;
@include foundation-flex-classes;
@include foundation-typography;
@include foundation-forms;
@include foundation-button;
@include foundation-accordion;
@include foundation-accordion-menu;
@include foundation-badge;
@include foundation-breadcrumbs;
@include foundation-button-group;
@include foundation-callout;
@include foundation-card;
@include foundation-close-button;
@include foundation-menu;
@include foundation-menu-icon;
@include foundation-drilldown-menu;
@include foundation-dropdown;
@include foundation-dropdown-menu;
@include foundation-responsive-embed;
@include foundation-label;
@include foundation-media-object;
@include foundation-off-canvas;
@include foundation-orbit;
@include foundation-pagination;
@include foundation-progress-bar;
@include foundation-slider;
@include foundation-sticky;
@include foundation-reveal;
@include foundation-switch;
@include foundation-table;
@include foundation-tabs;
@include foundation-thumbnail;
@include foundation-title-bar;
@include foundation-tooltip;
@include foundation-top-bar;
@include foundation-visibility-classes;
@include foundation-float-classes;
$topbar-responsive-bg: #2c3840;
$topbar-responsive-animation-type: fade-in; // or use slide-down or none
$warning-color: orange;

.topbar-responsive {
  background: $topbar-responsive-bg;
  padding: 1rem 1.5rem;

  .topbar-responsive-logo {
    color: $white;
    vertical-align: middle;
  }

  .menu {
    background: $topbar-responsive-bg;

    li:last-of-type {
      margin-right: 0;
    }

    a {
      color: $white;
      transition: color 0.15s ease-in;

      &:hover {
        color: lighten($topbar-responsive-bg, 60%);
      }
      @media screen and (max-width: 39.9375em) {
        padding: 0.875rem 0;
      }
    }

    .topbar-responsive-button {
      color: $white;
      border-color: $white;
      border-radius: 5000px;
      transition: color 0.15s ease-in, border-color 0.15s ease-in;

      &:hover {
        color: lighten($topbar-responsive-bg, 60%);
        border-color: lighten($topbar-responsive-bg, 60%);
      }
      @media screen and (max-width: 39.9375em) {
        width: 100%;
        margin: 0.875rem 0;
      }
    }
  }
  @media screen and (max-width: 39.9375em) {
    padding: 0.75rem;

    .top-bar-title {
      position: relative;
      width: 100%;

      span {
        position: absolute;
        right: 0;
        border: 1px solid $white;
        border-radius: 5px;
        padding: 0.25rem 0.45rem;
        top: 50%;
        transform: translateY(-50%);

        .menu-icon {
          // margin-bottom: 4px;
        }
      }
    }
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
@keyframes slideDown {
  0% {
    transform: translateY(-100%);
  }

  100% {
    transform: translateY(0%);
  }
}
@include breakpoint(small only) {
  .topbar-responsive-links {
    animation-fill-mode: both;
    animation-duration: 0.5s;
    width: 100%;
    @if $topbar-responsive-animation-type == slide-down {
      animation: slideDown 1s ease-in;
    }
    @else if $topbar-responsive-animation-type == fade-in {
      animation: fadeIn 1s ease-in;
    }
    @else {
      animation: none;
    }
  }
}

.sign-in-form {
  padding: 1rem 1.5em;
  border-radius: 0.5rem;
  background-color: #3d454f;

  h4 {
    color: white;
    margin-bottom: 1rem;
    font-weight: 600;
    text-transform: uppercase;
  }

  label {
    text-transform: uppercase;
    color: #adadad;
    letter-spacing: 1px;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  input {
    color: black;
  }

  input:focus {
    opacity: 0.5;
  }
}

.form-input-field,
.sign-in-form-password,
.sign-in-form-username {
  border-radius: 30px;
  border: none;
  opacity: 0.3;
  transition: all ease 0.4s;
  color: white;
}

input::placeholder {
  color: black;
}

.sign-in-form-button {
  border-radius: 30px;
  border: 1px solid #fff;
  color: #fff;
  background-color: transparent;
  text-transform: uppercase;
  letter-spacing: 1px;
  width: 100%;
  padding: 1rem;
  transition: all ease 0.4s;

  &:hover {
    background-color: #44c8ed;
    border-color: #44c8ed;
  }
}

.stats-list {
  list-style-type: none;
  clear: left;
  margin: 0;
  padding: 0;
  text-align: center;
  margin-bottom: 30px;

  .stats-list-positive {
    color: $success-color;
  }

  .stats-list-negative {
    color: $alert-color;
  }

  .stats-list-warning {
    color: $warning-color;
  }

  & > li {
    display: inline-block;
    margin-right: 10px;
    padding-right: 10px;
    border-right: 1px solid $medium-gray;
    text-align: center;
    font-size: 1.1em;
    font-weight: bold;

    &:last-child {
      border: none;
      margin: 0;
      padding: 0;
    }

    .stats-list-label {
      display: block;
      margin-top: 2px;
      font-size: 0.9em;
      font-weight: normal;
    }
  }
}

// variables
$multilevel-accordion-bg: #4d5158;
$multilevel-accordion-sub-bg: #35383d;
$multilevel-accordion-separator: #41444a;

.multilevel-accordion-menu {
  // background for main accordion items
  .is-accordion-submenu-parent a {
    background: $multilevel-accordion-bg;
  }

  // background for sub accordion items
  .is-accordion-submenu a {
    background: $multilevel-accordion-sub-bg;
  }

  // creates classes for nested elements, sub-item-*
  @for $i from 1 through 6 {
    .sublevel-#{$i} {
      text-indent: 0rem + $i;
    }
  }

  a {
    color: $white;
    // sets accodion item separator color
    box-shadow: inset 0 -1px $multilevel-accordion-separator;

    &::after {
      // sets accodion arrow color and direction
      border-color: $white transparent transparent;
    }
  }

  // padding for each list item
  .menu > li:not(.menu-text) > a {
    padding: 1.2rem 1rem;
  }
}

// style for folder icon on subitem anchors without a submenu
.multilevel-accordion-menu .is-accordion-submenu-parent[aria-expanded="true"] a.subitem::before {
  content: "\f016";
  font-family: FontAwesome;
  margin-right: 1rem;
}

// changes folder icon to open then accordion is open
.multilevel-accordion-menu .is-accordion-submenu-parent[aria-expanded="true"] a {
  &::before {
    content: "\f07c";
    font-family: FontAwesome;
    margin-right: 1rem;
  }
}

// changes folder icon to closed then accordion is closed
.multilevel-accordion-menu .is-accordion-submenu-parent[aria-expanded="false"] a {
  &::before {
    content: "\f07b";
    font-family: FontAwesome;
    margin-right: 1rem;
  }
}
